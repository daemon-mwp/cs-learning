spring:
  profiles:
    active: dev

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
rsa:
  key:
    pubKeyFile: D:\program\test\id_key_rsa.pub
    priKeyFile: D:\program\test\id_key_rsa
---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    db1:
      driverClassName: com.mysql.cj.jdbc.Driver
      jdbcUrl: jdbc:mysql://192.168.191.118:3306/learning?characterEncoding=UTF-8&user=root&password=Mwp@123&failOverReadOnly=false&secondsBeforeRetryMaster=0&queriesBeforeRetryMaster=0&serverTimezone=Asia/Shanghai&useUnicode=true&useSSL=false&connectTimeout=30000&socketTimeout=30000
    ck1:
      driverClassName: ru.yandex.clickhouse.ClickHouseDriver
      jdbcUrl: jdbc:clickhouse://192.168.191.118:8123/default
      username: default
      password:
      enabled: true
    hikari:
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 30000
      max-lifetime: 30000
      minimum-idle: 5
  zookeeper:
    server: 192.168.191.118:2181
    sessionTimeoutMs: 12000
    connectionTimeoutMs: 12000
    maxRetries: 3
    baseSleepTimeMs: 1000
    path: /test/leader
  redis:
    host: 192.168.191.118
    port: 6379
    #password:
    timeout: 3000
    lettuce:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
    redisson:
      config:
        # 单节点配置
        singleServerConfig:
          # 连接空闲超时，单位：毫秒
          idleConnectionTimeout: 10000
          pingTimeout: 10000
          # 连接超时，单位：毫秒
          connectTimeout: 10000
          # 命令等待超时，单位：毫秒
          timeout: 10000
          # 命令失败重试次数,如果尝试达到 retryAttempts（命令失败重试次数） 仍然不能将命令发送至某个指定的节点时，将抛出错误。
          # 如果尝试在此限制之内发送成功，则开始启用 timeout（命令等待超时） 计时。
          retryAttempts: 3
          # 命令重试发送时间间隔，单位：毫秒
          retryInterval: 1500
          # 重新连接时间间隔，单位：毫秒
          reconnectionTimeout: 3000
          # 执行失败最大次数
          failedAttempts: 3
          # 密码
          password: Mwp@123
          # 单个连接最大订阅数量
          subscriptionsPerConnection: 5
          # 客户端名称
          clientName: null
          # 节点地址
          address: redis://192.168.191.118:6379
          # 发布和订阅连接的最小空闲连接数
          subscriptionConnectionMinimumIdleSize: 5
          # 发布和订阅连接池大小
          subscriptionConnectionPoolSize: 50
          # 最小空闲连接数
          connectionMinimumIdleSize: 32
          # 连接池大小
          connectionPoolSize: 64
          # 数据库编号
          database: 0
          # DNS监测时间间隔，单位：毫秒
          dnsMonitoringInterval: 5000
        # 线程池数量,默认值: 当前处理核数量 * 2
        threads: 8
        # Netty线程池数量,默认值: 当前处理核数量 * 2
        nettyThreads: 8
        # 编码
        #codec: !<org.redisson.codec.JsonJacksonCodec> {}
        # 传输模式
        transportMode: "NIO"
  rabbitmq:
    host: 192.168.191.118
    port: 5672
    username: root
    password: Mwp@123
  elasticsearch:
    rest:
      # aieye es 配置
      #      uris: http://55.13.100.21:9200,http://55.13.100.120:9200
      #      username: nlpusr
      #      password: Pwd#dev123
      # 基建 ES 配置
      uris: http://192.168.191.118:9200
      username: elastic
      password: Mwp@123
      connection-timeout: 30000
      read-timeout: 30000
      max-result-window: 10000
---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    db1:
      driverClassName: com.mysql.cj.jdbc.Driver
      jdbcUrl: jdbc:mysql://192.168.31.97:3306/learning?characterEncoding=UTF-8&user=root&password=Mwp@123&failOverReadOnly=false&secondsBeforeRetryMaster=0&queriesBeforeRetryMaster=0&serverTimezone=Asia/Shanghai&useUnicode=true&useSSL=false&connectTimeout=30000&socketTimeout=30000
    ck1:
      driverClassName: ru.yandex.clickhouse.ClickHouseDriver
      jdbcUrl: jdbc:clickhouse://192.168.31.97:8123/default
      username: default
      password:
      enabled: true
    hikari:
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 30000
      max-lifetime: 30000
      minimum-idle: 5
  zookeeper:
    server: 192.168.31.97:2181
    sessionTimeoutMs: 12000
    connectionTimeoutMs: 12000
    maxRetries: 3
    baseSleepTimeMs: 1000
    path: /test/leader
  redis:
    host: 192.168.31.97
    port: 6379
    #password:
    timeout: 3000
    lettuce:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
    redisson:
      config:
        # 单节点配置
        singleServerConfig:
          # 连接空闲超时，单位：毫秒
          idleConnectionTimeout: 10000
          pingTimeout: 10000
          # 连接超时，单位：毫秒
          connectTimeout: 10000
          # 命令等待超时，单位：毫秒
          timeout: 10000
          # 命令失败重试次数,如果尝试达到 retryAttempts（命令失败重试次数） 仍然不能将命令发送至某个指定的节点时，将抛出错误。
          # 如果尝试在此限制之内发送成功，则开始启用 timeout（命令等待超时） 计时。
          retryAttempts: 3
          # 命令重试发送时间间隔，单位：毫秒
          retryInterval: 1500
          # 重新连接时间间隔，单位：毫秒
          reconnectionTimeout: 3000
          # 执行失败最大次数
          failedAttempts: 3
          # 密码
          password: Mwp@123
          # 单个连接最大订阅数量
          subscriptionsPerConnection: 5
          # 客户端名称
          clientName: null
          # 节点地址
          address: redis://192.168.31.97:6379
          # 发布和订阅连接的最小空闲连接数
          subscriptionConnectionMinimumIdleSize: 5
          # 发布和订阅连接池大小
          subscriptionConnectionPoolSize: 50
          # 最小空闲连接数
          connectionMinimumIdleSize: 32
          # 连接池大小
          connectionPoolSize: 64
          # 数据库编号
          database: 0
          # DNS监测时间间隔，单位：毫秒
          dnsMonitoringInterval: 5000
        # 线程池数量,默认值: 当前处理核数量 * 2
        threads: 8
        # Netty线程池数量,默认值: 当前处理核数量 * 2
        nettyThreads: 8
        # 编码
        #codec: !<org.redisson.codec.JsonJacksonCodec> {}
        # 传输模式
        transportMode: "NIO"
  rabbitmq:
    host: 192.168.31.97
    port: 5672
    username: root
    password: Mwp@123
  elasticsearch:
    rest:
      # aieye es 配置
      #      uris: http://55.13.100.21:9200,http://55.13.100.120:9200
      #      username: nlpusr
      #      password: Pwd#dev123
      # 基建 ES 配置
      uris: http://192.168.31.97:9200
      username: elastic
      password: Mwp@123
      connection-timeout: 5000
      read-timeout: 120000
      max-result-window: 10000